<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ru.vldf</groupId>
    <artifactId>sportsportal</artifactId>
    <version>0.2-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>SportsPortal</name>
    <description>Voronezh Sports Portal by VLDF</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <start-class>ru.vldf.sportsportal.boot.ApplicationBoot</start-class>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <java.version>1.8</java.version>
        <javax.servlet.version>3.0.1</javax.servlet.version>

        <db.url.prod>jdbc:postgresql://185.249.255.73:5432/sportsportal</db.url.prod>
        <db.url.demo>jdbc:postgresql://185.249.255.73:5432/sportsportal.demo</db.url.demo>
        <db.url.test>jdbc:postgresql://185.249.255.73:5432/sportsportal.test</db.url.test>

        <db.username>xxxxx</db.username>
        <db.password>xxxxx</db.password>

        <io.jsonwebtoken.version>0.9.0</io.jsonwebtoken.version>
        <org.postgresql.version>42.2.2</org.postgresql.version>
        <org.hibernate.version>5.3.2.Final</org.hibernate.version>
        <org.mapstruct.version>1.2.0.Final</org.mapstruct.version>
        <org.flywaydb.version>5.1.1</org.flywaydb.version>
        <io.springfox.version>2.9.2</io.springfox.version>
        <org.apache.maven.plugins.version>3.5.1</org.apache.maven.plugins.version>
        <org.hibernate.validator.version>6.0.10.Final</org.hibernate.validator.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <!-- INTEGRAL TOMCAT EXCLUSION -->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- CUSTOM SERVLET API -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- SPRING BOOT -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- POSTGRESQL -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${org.postgresql.version}</version>
        </dependency>

        <!-- HIBERNATE -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${org.hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-java8</artifactId>
            <version>${org.hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${org.hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>${org.hibernate.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- HIBERNATE VALIDATOR -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${org.hibernate.validator.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <version>${org.hibernate.validator.version}</version>
        </dependency>

        <!-- MAPSTRUCT -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-jdk8</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${org.mapstruct.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- JWT -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${io.jsonwebtoken.version}</version>
        </dependency>

        <!-- SWAGGER -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${io.springfox.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${io.springfox.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- TESTING -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- FLYWAY MAVEN PLUGIN -->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${org.flywaydb.version}</version>
                <configuration>
                    <url>${db.url.prod}</url>
                    <user>${db.username}</user>
                    <password>${db.password}</password>
                    <locations>filesystem:database/migration</locations>
                    <schemas>
                        <schema>flyway</schema>
                        <schema>common</schema>
                        <schema>lease</schema>
                    </schemas>
                </configuration>

                <executions>

                    <!-- DEMO EXECUTION -->
                    <execution>
                        <id>demo</id>
                        <configuration>
                            <url>${db.url.demo}</url>
                            <user>${db.username}</user>
                            <password>${db.password}</password>
                            <locations>filesystem:database/migration</locations>
                            <schemas>
                                <schema>flyway</schema>
                                <schema>common</schema>
                                <schema>lease</schema>
                            </schemas>
                        </configuration>
                    </execution>

                    <!-- TEST EXECUTION -->
                    <execution>
                        <id>test</id>
                        <configuration>
                            <url>${db.url.test}</url>
                            <user>${db.username}</user>
                            <password>${db.password}</password>
                            <locations>filesystem:database/migration</locations>
                            <schemas>
                                <schema>flyway</schema>
                                <schema>common</schema>
                                <schema>lease</schema>
                            </schemas>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- MAVEN COMPILER PLUGIN -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${org.apache.maven.plugins.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <annotationProcessorPaths>

                        <!-- HIBERNATE METAMODEL GENERATION -->
                        <path>
                            <groupId>org.hibernate</groupId>
                            <artifactId>hibernate-jpamodelgen</artifactId>
                            <version>${org.hibernate.version}</version>
                        </path>

                        <!-- MAPSTRUCT MAPPER GENERATION -->
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!-- SQL MAVEN PLUGIN -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>

                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${org.postgresql.version}</version>
                    </dependency>
                </dependencies>

                <configuration>
                    <driver>org.postgresql.Driver</driver>
                    <username>${db.username}</username>
                    <password>${db.password}</password>
                </configuration>

                <executions>
                    <execution>
                        <id>prod</id>
                        <configuration>
                            <url>${db.url.prod}</url>
                            <srcFiles>
                                <srcFile>database/boot/boot.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>demo</id>
                        <configuration>
                            <url>${db.url.demo}</url>
                            <srcFiles>
                                <srcFile>database/boot/boot.sql</srcFile>
                                <srcFile>database/boot/demo.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test</id>
                        <configuration>
                            <url>${db.url.test}</url>
                            <srcFiles>
                                <srcFile>database/boot/boot.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
