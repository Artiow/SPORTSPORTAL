<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ru.vldf</groupId>
    <artifactId>sportsportal</artifactId>
    <version>1.1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>SportsPortal</name>
    <description>Voronezh Sports Portal by VLDF</description>
    <url>https://github.com/Artiow/sportsportal</url>

    <developers>
        <developer>
            <name>Artem Namednev</name>
            <email>namednev.artem@gmail.com</email>
        </developer>
    </developers>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.2.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <profile>dev</profile>
                <project.artifactName>${project.artifactId}-${project.version}</project.artifactName>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <profile>prod</profile>
                <project.artifactName>ROOT</project.artifactName>
            </properties>
        </profile>
    </profiles>

    <properties>
        <start-class>ru.vldf.sportsportal.ApplicationBoot</start-class>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <java.version>1.8</java.version>

        <database.url>jdbc:postgresql://localhost:5432/playliga</database.url>
        <database.username>playliga</database.username>
        <database.password>playliga</database.password>

        <maven.plugin.war.version>3.2.2</maven.plugin.war.version>
        <maven.plugin.compiler.version>3.8.0</maven.plugin.compiler.version>
        <maven.plugin.resources.version>3.1.0</maven.plugin.resources.version>
        <io.jsonwebtoken.version>0.9.1</io.jsonwebtoken.version>
        <io.springfox.version>2.9.2</io.springfox.version>
        <org.imgscalr.version>4.2</org.imgscalr.version>
        <org.flywaydb.version>5.2.4</org.flywaydb.version>
        <org.postgresql.version>42.2.5</org.postgresql.version>
        <org.hibernate.version>5.4.0.Final</org.hibernate.version>
        <org.mapstruct.version>1.3.0.Final</org.mapstruct.version>
        <org.projectlombok.version>1.18.6</org.projectlombok.version>
        <org.hibernate.validator.version>6.0.14.Final</org.hibernate.validator.version>
        <com.fasterxml.jackson.dataformat.version>2.9.8</com.fasterxml.jackson.dataformat.version>
    </properties>

    <dependencies>
        <!-- spring boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <!-- postgresql -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${org.postgresql.version}</version>
        </dependency>

        <!-- hibernate -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${org.hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-java8</artifactId>
            <version>${org.hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>${org.hibernate.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- hibernate validator -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${org.hibernate.validator.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator-annotation-processor</artifactId>
            <version>${org.hibernate.validator.version}</version>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${org.projectlombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- mapstruct -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${org.mapstruct.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- jsonwebtoken -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${io.jsonwebtoken.version}</version>
        </dependency>

        <!-- yaml factory -->
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${com.fasterxml.jackson.dataformat.version}</version>
        </dependency>

        <!-- swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${io.springfox.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${io.springfox.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- img scalr -->
        <dependency>
            <groupId>org.imgscalr</groupId>
            <artifactId>imgscalr-lib</artifactId>
            <version>${org.imgscalr.version}</version>
        </dependency>

        <!-- testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- flyway maven plugin -->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${org.flywaydb.version}</version>
                <configuration>
                    <url>${database.url}</url>
                    <user>${database.username}</user>
                    <password>${database.password}</password>
                    <schemas>
                        <schema>flyway</schema>
                        <schema>common</schema>
                        <schema>booking</schema>
                        <schema>tournament</schema>
                    </schemas>
                </configuration>

                <executions>
                    <!-- dev execution -->
                    <execution>
                        <id>dev</id>
                        <configuration>
                            <locations>
                                filesystem:database/migration/common,filesystem:database/migration/dev
                            </locations>
                        </configuration>
                    </execution>

                    <!-- prod execution -->
                    <execution>
                        <id>prod</id>
                        <configuration>
                            <locations>
                                filesystem:database/migration/common,filesystem:database/migration/prod
                            </locations>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- maven compiler plugin -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.plugin.compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>

                        <!-- hibernate metamodel generation -->
                        <path>
                            <groupId>org.hibernate</groupId>
                            <artifactId>hibernate-jpamodelgen</artifactId>
                            <version>${org.hibernate.version}</version>
                        </path>

                        <!-- lombok compiler fix -->
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${org.projectlombok.version}</version>
                        </path>

                        <!-- mapstruct mapper generation -->
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <!-- mapstruct default component model as spring bean -->
                        <compilerArg>-Amapstruct.defaultComponentModel=spring</compilerArg>
                    </compilerArgs>
                </configuration>
            </plugin>
        </plugins>

        <finalName>${project.artifactName}</finalName>
    </build>
</project>
